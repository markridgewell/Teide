name: Build-Packages

on:
  schedule:
    # Run at 5:20am and 5:20pm every day
    - cron:  '20 5,17 * * *'
  workflow_dispatch:
  pull_request:
    # Only run for pull requests when the vcpkg configuration has changed
    paths:
    - 'vckpg*.json'
    - 'external/ports/**'
    - 'cmake/triplets/*.cmake'
    - 'cmake/toolchains/*.cmake'

env:
  VULKAN_SDK: ./VULKAN_SDK
  VCPKG_OVERLAY_PORTS: ./external/ports
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

jobs:
  unified:
    strategy:
      fail-fast: false
      matrix:
        preset: [msvc2022, clang++-17]
        sanitizer: ['OFF']
        include:
        - preset: msvc2022
          runner: windows-2022
        - preset: clang++-17
          runner: ubuntu-latest
          extra-packages: ninja-build clang++-17
        - preset: clang++-17
          runner: ubuntu-latest
          extra-packages: ninja-build clang++-17
          sanitizer: UBSAN
          name-suffix: -ubsan

    name: ${{startsWith(matrix.runner, 'windows') && 'Windows' || 'Linux'}}${{matrix.name-suffix}}
    runs-on: ${{matrix.runner}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        lfs: false
        submodules: recursive

    - name: Determine target triplet
      shell: bash
      run: echo "VCPKG_TRIPLET=$(cmake -DTEIDE_SANITIZER=${{matrix.sanitizer}} -P tools/cmake/scripts/DetermineTriplet.cmake)" >> "$GITHUB_ENV"

    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        key: vcpkg-export-${{env.VCPKG_TRIPLET}}-${{hashFiles('vcpkg.json', 'vcpkg-configuration.json', 'external/ports/**', 'cmake/triplets/*.cmake', 'cmake/toolchains/*.cmake')}}
        path: './exports'

    - name: Free disk space (Ubuntu)
      if: runner.os == 'Linux'
      uses: jlumbroso/free-disk-space@main

    - name: 'Setup NuGet credentials'
      shell: 'bash'
      # Replace <OWNER> with your organization name
      run: |
        alias nuget=${{runner.os == 'Linux' && 'mono ' || ''}}$(./external/vcpkg/vcpkg fetch nuget | tail -n 1)
        nuget sources add \
          -source "https://nuget.pkg.github.com/markridgewell/index.json" \
          -storepasswordincleartext \
          -name "GitHub" \
          -username markridgewell \
          -password "${{secrets.GITHUB_TOKEN}}"
        nuget setapikey "${{secrets.GITHUB_TOKEN}}" \
          -source "https://nuget.pkg.github.com/markridgewell/index.json"

    - name: Setup vcpkg
      if: steps.cache.outputs.cache-hit != 'true'
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgDirectory: '${{github.workspace}}/external/vcpkg'
        vcpkgJsonGlob: 'vcpkg.json'

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      uses: ./.github/actions/install-dependencies
      with:
        extra-packages: ${{matrix.extra-packages}}

    - name: Configure CMake
      if: steps.cache.outputs.cache-hit != 'true'
      run: cmake --preset ${{matrix.preset}} -DTEIDE_SANITIZER=${{matrix.sanitizer}} "-DVCPKG_INSTALL_OPTIONS=--x-abi-tools-use-exact-versions;--debug"

    - name: Dump CMake output logs
      if: failure()
      shell: bash
      run: |
        paths="external/vcpkg build/${{matrix.preset}}"
        for file in $(find $paths -name '*.log'); do
            if [ -s $file ]; then
                echo "::group::$file"
                cat $file
                echo "::endgroup::"
            fi
        done

    - name: Export packages
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        ./external/vcpkg/vcpkg export --raw --output=exports --output-dir=. --x-install-root=build/${{matrix.preset}}/vcpkg_installed

    - name: List contents
      if: steps.cache.outputs.cache-hit != 'true'
      shell: bash
      run: ls -R exports

    - name: Save packages as artifact
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v3
      with:
        name: vcpkg-export-${{env.VCPKG_TRIPLET}}
        path: './exports'
