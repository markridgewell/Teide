name: Build-Packages

on:
  schedule:
    # Run at 5:20am and 5:20pm every day
    - cron:  '20 5,17 * * *'
  pull_request:
  workflow_dispatch:

env:
  VULKAN_SDK: ./VULKAN_SDK
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite;nugettimeout,600'

jobs:
  unified:
    strategy:
      fail-fast: false
      matrix:
        preset: [msvc2022, clang++-18]
        sanitizer: ['OFF']
        include:
        - preset: msvc2022
          runner: windows-2022
        - preset: clang++-18
          runner: ubuntu-latest
          extra-packages: clang++-18 mono-complete

    name: ${{startsWith(matrix.runner, 'windows') && 'Windows' || 'Linux'}}
    runs-on: ${{matrix.runner}}

    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2
      with:
        lfs: false

    - name: Determine cache key
      id: cache-key
      uses: ./.github/actions/get-packages-cache-key
      with:
        sanitizer: ${{ matrix.sanitizer }}

    - name: Cache
      id: cache
      uses: actions/cache@v4.2.0
      with:
        key: ${{ steps.cache-key.outputs.cache-key }}
        path: './exports'

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      uses: ./.github/actions/install-dependencies
      with:
        extra-packages: ${{matrix.extra-packages}}

    - name: Install NuGet (Linux only)
      if: steps.cache.outputs.cache-hit != 'true' && runner.os == 'Linux'
      shell: 'bash'
      run: |
        bin=$HOME/nuget_bin
        mkdir $bin
        wget -O $bin/nuget.exe https://dist.nuget.org/win-x86-commandline/latest/nuget.exe
        echo "mono $bin/nuget.exe $@" > $bin/nuget
        chmod +x $bin/nuget
        echo "$bin" >> $GITHUB_PATH

    - name: 'Setup NuGet credentials'
      if: steps.cache.outputs.cache-hit != 'true'
      shell: 'bash'
      run: |
        nuget sources add \
          -source "https://nuget.pkg.github.com/markridgewell/index.json" \
          -storepasswordincleartext \
          -name "GitHub" \
          -username markridgewell \
          -password "${{secrets.GITHUB_TOKEN}}"
        nuget setapikey "${{secrets.GITHUB_TOKEN}}" \
          -source "https://nuget.pkg.github.com/markridgewell/index.json"

    - name: Configure CMake
      if: steps.cache.outputs.cache-hit != 'true'
      run: >
        cmake --preset ${{matrix.preset}}
        -DTEIDE_SANITIZER=${{matrix.sanitizer}}
        -DVCPKG_INSTALL_OPTIONS=--x-abi-tools-use-exact-versions${{runner.debug && ';--debug' || ''}}

    - name: Dump CMake output logs
      if: failure()
      run: bash .github/scripts/dump-vcpkg-logs.sh ${{matrix.preset}}

    - name: Export packages
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        vcpkg/vcpkg export --raw --output=exports --output-dir=. --x-install-root=build/${{matrix.preset}}/vcpkg_installed
        echo ""
        echo "::group::Contents of exported packages:"
        ls -R exports
        echo "::endgroup::"

    - name: Save packages as artifact
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/upload-artifact@v4.5.0
      with:
        name: vcpkg-export-${{ steps.cache-key.outputs.cache-key }}
        path: './exports'
