name: Build-Packages

on:
  schedule:
    # Run at 5:20am and 5:20pm every day
    - cron:  '20 5,17 * * *'
  workflow_dispatch:

env:
  VULKAN_SDK: ./VULKAN_SDK
  VCPKG_OVERLAY_PORTS: ./external/ports

jobs:
  windows:
    strategy:
      fail-fast: true
      matrix:
        preset: [msvc2022, msvc2022-clang]
        include:
        - preset: msvc2022
          runner: windows-2022
        - preset: msvc2022-clang
          runner: windows-2022

    name: Windows-${{matrix.preset}}
    runs-on: ${{matrix.runner}}

    env:
      job_name: Windows-${{matrix.preset}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        lfs: false
        submodules: recursive

    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        key: vcpkg-export-${{env.job_name}}-${{hashFiles('vckpg.json','external/ports/**')}}
        path: './exports'

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      uses: ./.github/actions/install-dependencies

    - name: Configure CMake
      if: steps.cache.outputs.cache-hit != 'true'
      run: cmake --preset ${{matrix.preset}}

    - name: Export packages
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        ./external/vcpkg/vcpkg export --raw --output-dir=./exports --x-install-root=build/${{matrix.preset}}/vcpkg_installed

  linux:
    strategy:
      matrix:
        preset: [g++-13, clang++-17]
        include:
        - preset: g++-13
          runner: ubuntu-latest
        - preset: clang++-17
          runner: ubuntu-latest
      fail-fast: true

    name: Linux-${{matrix.preset}}
    runs-on: ${{matrix.runner}}

    env:
      job_name: Linux-${{matrix.preset}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        lfs: false
        submodules: recursive

    - name: Cache
      id: cache
      uses: actions/cache@v3
      with:
        key: vcpkg-export-${{env.job_name}}-${{hashFiles('vckpg.json','external/ports/**')}}
        path: './exports'

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      uses: ./.github/actions/install-dependencies
      with:
        extra-packages: ninja-build ${{matrix.preset}}

    - name: Configure CMake
      if: steps.cache.outputs.cache-hit != 'true'
      run: cmake --preset ${{matrix.preset}} -DCMAKE_CXX_COMPILER=${{matrix.preset}}

    - name: Export packages
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        ./external/vcpkg/vcpkg export --raw --output-dir=./exports --x-install-root=build/${{matrix.preset}}/vcpkg_installed
