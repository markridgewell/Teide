name: Run-Benchmarks

on:
  workflow_dispatch:
    inputs:
      base-branch:
        description: 'Branch to compare benchmark against'
        required: true
        default: main
        type: string
      repetitions:
        description: 'Number of times to run each benchmark'
        required: true
        default: 10
        type: number

jobs:
  benchmark:
    name: Run-Benchmarks
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: false

    - name: Install packages
      id: packages
      uses: ./.github/actions/install-packages

    - name: Install dependencies
      uses: ./.github/actions/install-dependencies
      with:
        extra-packages: ninja-build

    - name: Install google benchmark tools
      run: |
        git clone https://github.com/google/benchmark.git
        python --version
        echo "Creating virtual environment..."
        python -m venv ./venv
        source ./venv/bin/activate
        python -m ensurepip --upgrade
        pip install --upgrade pip
        pip install --upgrade setuptools
        pip install -r benchmark/tools/requirements.txt

    - name: Run benchmark script
      run: |
        source ./venv/bin/activate
        base_ref=$(git merge-base "${{github.sha}}" "origin/${{inputs.base-branch}}")
        python tools/benchmark.py compare \
          --preset g++-14 \
          --out-dir benchmark_results \
          --out-report report.txt \
          --out-summary summary.md \
          --compare benchmark/tools/compare.py \
          --repetitions ${{inputs.repetitions}} \
          --sw-render \
          -DTEIDE_USE_VCPKG=OFF \
          -DCMAKE_PREFIX_PATH=${{steps.packages.outputs.install-dir}} \
          -DTEIDE_PRECOMPILED_HEADERS=ON \
          "$base_ref" "${{github.sha}}"

    - name: Write PR comment
      env:
        GH_TOKEN: ${{github.token}}
      run: |
        (
          echo "## Benchmark Report"
          cat summary.md
          echo "<details><summary>Full report</summary>"
          echo ""
          echo '```'
          cat report.txt
          echo '```'
          echo ""
          echo "</details>"
        ) >> comment.md

        bash .github/scripts/update-comment.sh ${{github.ref_name}} github-actions comment.md

    - name: Save output
      uses: actions/upload-artifact@v3
      with:
        name: BenchmarkResults
        path: benchmark_results
