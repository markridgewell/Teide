
name: Static-Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  clang_tidy_version: 17
  pattern: '\.\(c\|cpp\|cc\|cxx\|h\|hpp\)$'

jobs:
  cppcheck:
    name: Cppcheck
    runs-on: windows-latest
    env: { preset: msvc2022 }

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}
        submodules: true

    - name: Get changed files
      id: get-changes
      uses: ./.github/actions/get-changed-files
      with:
        filter-pattern: ${{env.pattern}}

    - name: Install packages
      if: steps.get-changes.outputs.changed-files != ''
      id: packages
      uses: ./.github/actions/install-packages

    - name: Install dependencies
      if: steps.get-changes.outputs.changed-files != ''
      uses: ./.github/actions/install-dependencies
      with:
        extra-packages: cppcheck

    - name: Configure CMake
      if: steps.get-changes.outputs.changed-files != ''
      run: >
        cmake --preset ${{env.preset}}
        -DTEIDE_CPPCHECK=ON
        -DTEIDE_USE_VCPKG=OFF
        -DCMAKE_PREFIX_PATH=${{steps.packages.outputs.install-dir}}

    - name: Run Cppcheck
      if: steps.get-changes.outputs.changed-files != ''
      run: |
        cmake --build --preset ${{env.preset}} --target Cppcheck

  clang-tidy:
    name: ClangTidy
    runs-on: ubuntu-latest
    env: { preset: make }

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}
        submodules: true

    - name: Get changed files
      id: get-changes
      uses: ./.github/actions/get-changed-files
      with:
        filter-pattern: ${{env.pattern}}

    - name: Install packages
      if: steps.get-changes.outputs.changed-files != ''
      id: packages
      uses: ./.github/actions/install-packages

    - name: Install dependencies
      if: steps.get-changes.outputs.changed-files != ''
      uses: ./.github/actions/install-dependencies
      with:
        extra-packages: clang-tidy-${{env.clang_tidy_version}}

    - name: Configure CMake
      if: steps.get-changes.outputs.changed-files != ''
      run: >
        cmake --preset ${{env.preset}}
        -DTEIDE_CLANG_TIDY=ON
        -DTEIDE_USE_VCPKG=OFF
        -DCMAKE_PREFIX_PATH=${{steps.packages.outputs.install-dir}}

    - name: Run clang-tidy
      if: steps.get-changes.outputs.changed-files != ''
      env:
        CLANG_TIDY_SOURCES: ${{steps.get-changes.outputs.changed-files}}
      run: |
        sudo ln -sf `which clang-tidy-${{env.clang_tidy_version}}` /usr/bin/clang-tidy
        cmake --build --preset ${{env.preset}} --target ClangTidy

    - name: Apply replacements
      if: failure() && github.event_name == 'pull_request'
      run: clang-apply-replacements .

    - name: Report issues as PR comments
      if: failure() && github.event_name == 'pull_request'
      uses: reviewdog/action-suggester@v1
      with:
        tool_name: clang-tidy

    - name: Save fixes as build artifact
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: clang-tidy-fixes
        path: ${{github.workspace}}/build/${{env.preset}}/clang-tidy-fixes.yaml
