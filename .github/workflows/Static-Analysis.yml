
name: Static-Analysis
on: [push]

env:
  clang_tidy_version: 16

jobs:
  cppcheck:
    strategy:
      fail-fast: false
      matrix:
        os: ['Windows', 'Linux']
        include:
          - os: 'Windows'
            runner: 'windows-2022'
            preset: 'msvc2022'
            pkg: 'choco install --ignorepackageexitcodes'
          - os: 'Linux'
            runner: 'ubuntu-latest'
            preset: 'linux'
            pkg: 'sudo apt-get install'

    name: CppCheck-${{matrix.os}}
    runs-on: ${{matrix.runner}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      uses: ./.github/actions/install-dependencies
      with:
        preset: ${{matrix.preset}}

    - name: Install CppCheck
      run: ${{matrix.pkg}} cppcheck

    - name: Refresh environment
      if: matrix.os == 'Windows'
      run: refreshenv

    - name: Configure CMake
      run: cmake --preset ${{matrix.preset}}

    - name: Run CppCheck
      run: python tools/cppcheck.py --build-dir=build/${{matrix.preset}} --show-code

  clang-tidy:
    name: ClangTidy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      uses: ./.github/actions/install-dependencies
      with:
        preset: linux

    - name: Install clang-tidy ${{env.clang_tidy_version}}
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh ${{env.clang_tidy_version}}
        sudo apt-get -y clang-tidy-${{env.clang_tidy_version}}

    - name: Configure CMake
      run: cmake --preset linux -DTEIDE_CLANG_TIDY=ON

    - name: Run clang-tidy
      run: cmake --preset linux --target ClangTidy
