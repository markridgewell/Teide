
name: Static-Analysis
on: [push, workflow_dispatch]

env:
  clang_tidy_version: 16

jobs:
  cppcheck:
    name: CppCheck
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      uses: ./.github/actions/install-dependencies
      with:
        preset: msvc2022

    - name: Install CppCheck
      run: |
        choco install --ignorepackageexitcodes cppcheck
        refreshenv

    - name: Configure CMake
      run: cmake --preset msvc2022

    - name: Run CppCheck
      run: python tools/cppcheck.py --build-dir=build/msvc2022 --show-code

  clang-tidy:
    name: ClangTidy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get changes
      if: github.event_name == 'push'
      run: |
        PATTERN='\.\(c\|cpp\|cc\|cxx\|h\|hpp\)$'
        git diff --name-only --diff-filter=ACMRT ${{github.event.before}} ${{github.event.after}} >all_changes.txt
        if cat all_changes.txt | grep -q $PATTERN; then
          echo "Changed C++ source files:"
          cat all_changes.txt | grep $PATTERN >cpp_changes.txt
          cat cpp_changes.txt
          echo "CLANG_TIDY_SOURCES=$(cat cpp_changes.txt | tr '\n' ';')" >> $GITHUB_ENV
        else
          echo "No changes to C++ source files, skipping analysis"
        fi

    - name: Install dependencies
      if: env.CLANG_TIDY_SOURCES != ''
      uses: ./.github/actions/install-dependencies
      with:
        preset: linux

    - name: Install clang-tidy
      if: env.CLANG_TIDY_SOURCES != ''
      run: |
        wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key | sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
        UBUNTU_CODENAME=`sudo cat /etc/os-release | sed -n s/UBUNTU_CODENAME=//p`
        sudo add-apt-repository "deb http://apt.llvm.org/${UBUNTU_CODENAME}/ llvm-toolchain-${UBUNTU_CODENAME}-${{env.clang_tidy_version}} main"
        sudo apt-get update
        sudo apt-get install -y clang-tidy-${{env.clang_tidy_version}}
        sudo ln -sf `which clang-tidy-16` /usr/bin/clang-tidy

    - name: Configure CMake
      if: env.CLANG_TIDY_SOURCES != ''
      run: cmake --preset linux -DTEIDE_CLANG_TIDY=ON

    - name: Run clang-tidy
      if: env.CLANG_TIDY_SOURCES != ''
      run: cd build/linux && make ClangTidy
