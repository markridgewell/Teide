
name: Static-Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  clang_tidy_version: 16
  pattern: '\.\(c\|cpp\|cc\|cxx\|h\|hpp\)$'

jobs:
  cppcheck:
    name: CppCheck
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}

    - name: Get changed files
      id: get-changes
      uses: ./.github/actions/get-changed-files
      with:
        filter-pattern: ${{env.pattern}}

    - name: Install dependencies
      if: steps.get-changes.outputs.changed-files != ''
      uses: ./.github/actions/install-dependencies
      with:
        vcpkg-cache-key: cppcheck
        extra-packages: cppcheck

    - name: Configure CMake
      if: steps.get-changes.outputs.changed-files != ''
      run: cmake --preset msvc2022

    - name: Run CppCheck
      if: steps.get-changes.outputs.changed-files != ''
      run: python tools/cppcheck.py --build-dir=build/msvc2022 --show-code

  clang-tidy:
    name: ClangTidy
    runs-on: ubuntu-latest
    env: { preset: make }

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}

    - name: Get changed files
      id: get-changes
      uses: ./.github/actions/get-changed-files
      with:
        filter-pattern: ${{env.pattern}}

    - name: Install dependencies
      if: steps.get-changes.outputs.changed-files != ''
      uses: ./.github/actions/install-dependencies
      with:
        vcpkg-cache-key: clang-tidy
        extra-packages: clang-tidy-${{env.clang_tidy_version}}

    - name: Configure CMake
      if: steps.get-changes.outputs.changed-files != ''
      run: cmake --preset make -DTEIDE_CLANG_TIDY=ON

    - name: Run clang-tidy
      if: steps.get-changes.outputs.changed-files != ''
      env:
        CLANG_TIDY_SOURCES: ${{steps.get-changes.outputs.changed-files}}
      run: |
        sudo ln -sf `which clang-tidy-${{env.clang_tidy_version}}` /usr/bin/clang-tidy
        cd build/make && make ClangTidy
