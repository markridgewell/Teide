name: 'install-packages'
description: 'Install pre-built packages from the GitHub Actions cache'

inputs:
  sanitizer:
    description: 'Sanitizer to be used, or OFF to disable'
    required: true
    default: 'OFF'
outputs:
  install-dir:
    description: "Directory the packages were installed to"
    value: ${{ steps.get-dir.outputs.dir }}

runs:
  using: composite
  steps:
    - name: Determine cache key
      id: get-key
      uses: ./.github/actions/get-packages-cache-key
      with:
        sanitizer: ${{ matrix.sanitizer }}

    - name: Determine install directory
      id: get-dir
      shell: bash
      run: |
        echo "dir=${{github.workspace}}/exports/installed/${{ steps.get-key.outputs.triplet }}" >> $GITHUB_OUTPUT

    - name: Restore packages from cache
      id: cache
      uses: actions/cache/restore@v3
      with:
        key: ${{ steps.get-key.outputs.cache-key }}
        path: './exports'
        fail-on-cache-miss: true

    - name: Determine clang version
      if: inputs.sanitizer == 'MSAN'
      id: clang
      shell: bash
      run: |
        version=$(clang -dumpversion)
        echo "Clang version determined to be $version"
        echo "version=$version" >> $GITHUB_OUTPUT

    - name: Restore libc++ from cache
      if: inputs.sanitizer == 'MSAN'
      uses: actions/cache/restore@v3
      with:
        key: libcxx-${{ steps.clang.outputs.version }}-msan
        path: |
          build/*/_deps/customibcxx-src
          build/*/libcxx
